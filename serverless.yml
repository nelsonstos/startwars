service: rimacapp

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-2
  stage: dev
  environment:
    environment:
    DYNAMODB_ENDPOINT: http://localhost:4200 
    DYNAMODB_CLIENTS_TABLE: ${self:service}-${self:provider.stage}-clients
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:PutItem"
            - "dynamodb:GetItem"
            - "dynamodb:UpdateItem"
            - "dynamodb:Query"
          Resource:
            - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_CLIENTS_TABLE}"
functions:
  createUser:
    handler: dist/app.handler
    timeout: 30
    events:
      - http:
          path: users
          method: post
  getCharacter:
    handler: dist/app.handler
    timeout: 30
    events:
      - http:
          path: characters/{name}
          method: get
          cors: true

plugins:
  - serverless-offline

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-UsersTable
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
